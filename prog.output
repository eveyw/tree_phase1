Terminals which are not used

   TOK_SEMICOLON
   TOK_ADD
   TOK_SUB
   TOK_MUL
   TOK_DIV
   TOK_PRINTLN
   TOK_FLOAT


Grammar

    0 $accept: Prog $end

    1 Prog: /* empty */
    2     | TOK_MAIN '(' ')' Stmts

    3 Stmts: /* empty */
    4      | TOK_NUM


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2
')' (41) 2
error (256)
TOK_MAIN (258) 2
TOK_SEMICOLON (259)
TOK_ADD (260)
TOK_SUB (261)
TOK_MUL (262)
TOK_DIV (263)
TOK_NUM (264) 4
TOK_PRINTLN (265)
TOK_FLOAT (266)


Nonterminals, with rules where they appear

$accept (14)
    on left: 0
Prog (15)
    on left: 1 2, on right: 0
Stmts (16)
    on left: 3 4, on right: 2


state 0

    0 $accept: . Prog $end

    TOK_MAIN  shift, and go to state 1

    $default  reduce using rule 1 (Prog)

    Prog  go to state 2


state 1

    2 Prog: TOK_MAIN . '(' ')' Stmts

    '('  shift, and go to state 3


state 2

    0 $accept: Prog . $end

    $end  shift, and go to state 4


state 3

    2 Prog: TOK_MAIN '(' . ')' Stmts

    ')'  shift, and go to state 5


state 4

    0 $accept: Prog $end .

    $default  accept


state 5

    2 Prog: TOK_MAIN '(' ')' . Stmts

    TOK_NUM  shift, and go to state 6

    $default  reduce using rule 3 (Stmts)

    Stmts  go to state 7


state 6

    4 Stmts: TOK_NUM .

    $default  reduce using rule 4 (Stmts)


state 7

    2 Prog: TOK_MAIN '(' ')' Stmts .

    $default  reduce using rule 2 (Prog)
